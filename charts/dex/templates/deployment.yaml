{{ $fullname := include "fullname" . }}
{{ $httpsTlsBuiltName := printf "%s-tls" $fullname }}
{{ $httpsTlsSecretName := default $httpsTlsBuiltName .Values.certs.web.secret.tlsName }}
{{ $grpcTlsServerBuiltName := printf "%s-server-tls" $fullname }}
{{ $grpcTlsServerSecretName := default $grpcTlsServerBuiltName .Values.certs.grpc.secret.serverTlsName }}
{{ $grpcCaBuiltName := printf "%s-ca" $fullname }}
{{ $grpcCaSecretName := default $grpcCaBuiltName .Values.certs.grpc.secret.caName }}

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "fullname" . }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ template "serviceAccountName" . }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /usr/local/bin/dex
        - serve
        - /etc/dex/cfg/config.yaml
        resources:
{{ toYaml .Values.resources | indent 12 }}
        ports:
{{- range .Values.ports }}
        - name: {{ .name }}
          containerPort: {{ .internalPort }}
          protocol: {{ .protocol }}
{{- end }}
        env:
{{ toYaml .Values.env | indent 12 }}
        volumeMounts:
        - mountPath: /etc/dex/cfg
          name: config
{{- if .Values.certs.web.create }}
        - mountPath: /etc/dex/tls/https/server
          name: https-tls
{{- end }}
{{- if .Values.certs.grpc.create }}
        - mountPath: /etc/dex/tls/grpc/server
          name: grpc-tls-server
        - mountPath: /etc/dex/tls/grpc/ca
          name: grpc-tls-ca
{{- end }}
        livenessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.livenessProbe.port }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.readinessProbe.port }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      - secret:
          defaultMode: 420
          items:
          - key: config.yaml
            path: config.yaml
          secretName: {{ $fullname }}
        name: config
{{- if .Values.certs.web.create }}
      - name: https-tls
        secret:
          defaultMode: 420
          secretName: {{ $httpsTlsSecretName | quote }}
{{- end }}
{{- if .Values.certs.grpc.create }}
      - name: grpc-tls-server
        secret:
          defaultMode: 420
          secretName: {{ $grpcTlsServerSecretName | quote }}
      - name: grpc-tls-ca
        secret:
          defaultMode: 420
          secretName: {{ $grpcCaSecretName| quote }}
{{- end }}
